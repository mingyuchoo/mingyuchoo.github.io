<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>stack on mingyuchoo.github.io</title>
    <link>https://mingyuchoo.github.io/tags/stack/</link>
    <description>Recent content in stack on mingyuchoo.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://mingyuchoo.github.io/tags/stack/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Stack/Queue</title>
      <link>https://mingyuchoo.github.io/posts/2020-05-24-algorithm-stack-queue/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mingyuchoo.github.io/posts/2020-05-24-algorithm-stack-queue/</guid>
      <description>LIFO, FIFO, push &amp;amp; pop! 스택과 큐를 이용합니다.
후입선출(後入先出, Last In First Out; LIFO)[1]의 자료구조.데이터 저장소에서 새로 들어오는 데이터의 위치가 저장소의 끝 부분(Top 혹은 Top pointer라고 한다)이고, 써먹기 위해 내보내는 데이터 역시 저장소의 끄트머리에서 나간다. 입력은 push, 출력은 pop이다. peek는 Top의 위치에 있는 데이터를 확인하는 것을 말한다.
선입선출(先入先出, First In First Out; FIFO)의 자료구조. 대기열이라고도 한다. Queue라는 단어 자체가 표 같은 것을 구매하기 위해 줄서는 것을 의미한다.</description>
    </item>
    
  </channel>
</rss>
